/* Generated By:JJTree&JavaCC: Do not edit this line. LexerConstants.java */
package parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface LexerConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 5;
  /** RegularExpression Id. */
  int MAIS = 7;
  /** RegularExpression Id. */
  int MENOS = 8;
  /** RegularExpression Id. */
  int VEZES = 9;
  /** RegularExpression Id. */
  int DIVIDIDO = 10;
  /** RegularExpression Id. */
  int ELEVADO = 11;
  /** RegularExpression Id. */
  int RESTO = 12;
  /** RegularExpression Id. */
  int ATRIBUICAO = 13;
  /** RegularExpression Id. */
  int IGUAL = 14;
  /** RegularExpression Id. */
  int DIFERENTE = 15;
  /** RegularExpression Id. */
  int MAIOR = 16;
  /** RegularExpression Id. */
  int MENOR = 17;
  /** RegularExpression Id. */
  int MAIOR_IGUAL = 18;
  /** RegularExpression Id. */
  int MENOR_IGUAL = 19;
  /** RegularExpression Id. */
  int OU = 20;
  /** RegularExpression Id. */
  int E = 21;
  /** RegularExpression Id. */
  int NEGACAO = 22;
  /** RegularExpression Id. */
  int PARE_HOME = 23;
  /** RegularExpression Id. */
  int TCHE = 24;
  /** RegularExpression Id. */
  int BAH = 25;
  /** RegularExpression Id. */
  int DAI = 26;
  /** RegularExpression Id. */
  int FUNCAO = 27;
  /** RegularExpression Id. */
  int DEVOLTA = 28;
  /** RegularExpression Id. */
  int LOQUEANDO = 29;
  /** RegularExpression Id. */
  int REPETECO = 30;
  /** RegularExpression Id. */
  int DE = 31;
  /** RegularExpression Id. */
  int ATE = 32;
  /** RegularExpression Id. */
  int SE = 33;
  /** RegularExpression Id. */
  int SENAO = 34;
  /** RegularExpression Id. */
  int TROVAR = 35;
  /** RegularExpression Id. */
  int ESCUITAR = 36;
  /** RegularExpression Id. */
  int FIM_LINHA = 37;
  /** RegularExpression Id. */
  int VIRGULA = 38;
  /** RegularExpression Id. */
  int ABRE_PARENTESE = 39;
  /** RegularExpression Id. */
  int FECHA_PARENTESE = 40;
  /** RegularExpression Id. */
  int REDONDO = 41;
  /** RegularExpression Id. */
  int QUEBRADO = 42;
  /** RegularExpression Id. */
  int TROVA = 43;
  /** RegularExpression Id. */
  int LOGICO = 44;
  /** RegularExpression Id. */
  int VAZIO = 45;
  /** RegularExpression Id. */
  int BOOLEANO = 46;
  /** RegularExpression Id. */
  int NOME_VARIAVEL = 47;
  /** RegularExpression Id. */
  int NOME_FUNCAO = 48;
  /** RegularExpression Id. */
  int LETRA = 49;
  /** RegularExpression Id. */
  int MINUSCULAS = 50;
  /** RegularExpression Id. */
  int MAIUSCULAS = 51;
  /** RegularExpression Id. */
  int NUMERO = 52;
  /** RegularExpression Id. */
  int DIGITO = 53;
  /** RegularExpression Id. */
  int TEXTO = 54;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_MULTI_LINE_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"/*\"",
    "\"*/\"",
    "<token of kind 6>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"^\"",
    "\"%\"",
    "\"=\"",
    "\"==\"",
    "\"!=\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"ou\"",
    "\"e\"",
    "\"!\"",
    "\"pareHome\"",
    "\"tche\"",
    "\"bah\"",
    "\"dai\"",
    "\"funcao\"",
    "\"devolta\"",
    "\"loqueando\"",
    "\"repeteco\"",
    "\"de\"",
    "\"ate\"",
    "\"se\"",
    "\"senao\"",
    "\"Trovar\"",
    "\"Escuitar\"",
    "\"\\n\"",
    "\",\"",
    "\"(\"",
    "\")\"",
    "\"redondo\"",
    "\"quebrado\"",
    "\"trova\"",
    "\"logico\"",
    "\"vazio\"",
    "<BOOLEANO>",
    "<NOME_VARIAVEL>",
    "<NOME_FUNCAO>",
    "<LETRA>",
    "<MINUSCULAS>",
    "<MAIUSCULAS>",
    "<NUMERO>",
    "<DIGITO>",
    "<TEXTO>",
  };

}
